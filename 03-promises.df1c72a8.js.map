{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAC,KAAO,CAEPC,KAAMC,SAASC,cAAc,aAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAG/B,MAAMF,KAAEM,EAAIH,MAAEI,EAAKH,KAAEI,EAAIH,OAAEI,GAAWV,KAwBtC,SAASW,EAAcC,EAAUC,GACjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,C,SAACH,EAAUR,MAAAS,IAEnBG,EAAQ,C,SAACJ,EAAUR,MAAAS,GAAO,G,CA5B9BN,EAAKY,iBAAiB,UAEtB,SAA0BC,GAC1BA,EAAMC,iBACN,IAAIC,EAAaC,OAAOf,EAAMgB,OAE9B,IAAK,IAAIC,EAAgB,EAAGA,GAAiB,EAAGA,IAE9Cd,EAAcc,EAAeH,GAC5BI,MAAK,EAACd,SAACA,EAAUR,MAAAuB,MAClB7B,EAAA8B,OAAOC,QAAQ,qBAAqBjB,QAAee,OAAW,IAE/DG,OAAM,EAAClB,SAACA,EAAUR,MAAA2B,MACnBjC,EAAA8B,OAAOI,QAAQ,oBAAoBpB,QAAemB,OAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nrefs = {\n \nform: document.querySelector('form.form'),\ndelay: document.querySelector('input[name=\"delay\"]'),\nstep: document.querySelector('input[name=\"step\"]'),\namount: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener('submit', promiseGenerator)\n\nfunction promiseGenerator(event) {\nevent.preventDefault();\nlet delayValue = Number(delay.value);\n\nfor (let positionValue = 1; positionValue <= 5; positionValue++) {\n\n  createPromise(positionValue, delayValue)\n  .then(({position, delay}) => {\n  Notify.success(`Fulfilled promise ${position} in ${delay} ms`);\n})\n.catch(({position, delay}) => {\nNotify.failure(`Rejected promise ${position} in ${delay} ms`)\n\n});\n\n\n}\n\n}\n\nfunction createPromise(position, delay) {\nreturn new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay});\n  } else {\n    reject ({position, delay});\n  }\n} )\n\n}\n"],"names":["$iQIUW","parcelRequire","refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","Math","random","addEventListener","event","preventDefault","delayValue","Number","value","positionValue","then","delay1","Notify","success","catch","delay2","failure"],"version":3,"file":"03-promises.df1c72a8.js.map"}